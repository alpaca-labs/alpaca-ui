$icon-input-margin: 8px;
$validation-icon-size: 20px;
$loading-icon-size: 25px;
$button-eye-size: 30px;
$border: 1px;

.AuiFormGroup {

  label {
    font-size: 14px;
    font-weight: 600;
    color: $dark-indigo;
    margin-bottom: 8px;
    display: inline-block;
  }

  .AuiInputWrapper {

    .AuiFormControl {
      position: relative;

      textarea {
        resize: none;
        scrollbar-width: none;
        -ms-overflow-style: none;

        &::-webkit-scrollbar {
          display: none;
        }
      }

      input, textarea {
        width: 100%;
        display: block;

        font-family: inherit;
        font-size: 14px;
        font-weight: 400;
        background-color: $white;
        background-clip: padding-box;

        border: $border solid $grey-2;
        border-radius: 6px;

        padding: 11px 16px;
        box-shadow: none;
        transition: border-color 200ms ease-in-out;

        &:disabled {
          background-color: $grey-3;
        }

        &:focus {
          border: $border solid $primary;
          outline: none;
        }

        &::placeholder {
          color: $grey;
        }
      }

      .AuiLoadingInput {
        position: absolute;
        width: $loading-icon-size;
        top: 50%;
        transform: translateY(-50%);
        right: calc(#{$icon-input-margin} + #{$border});
      }

      .AuiButtonEye {
        position: absolute;
        top: 50%;
        right: $icon-input-margin;
        transform: translateY(-50%);
        border-radius: 100%;
        height: $button-eye-size;
        width: $button-eye-size;
        padding: 0;
        display: flex;
        justify-content: center;
        align-items: center;
      
        .eyeIcon {
          color: $soft-grey;
          transition: color 400ms ease-in-out;
      
          &.show {
            color: $dark-indigo;
          }
        }
      }

      .AuiValidIcon {
        width: $validation-icon-size;
        height: $validation-icon-size;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: $icon-input-margin;
        fill: none;
        stroke: $success;
        stroke-width: 3px;
        stroke-dashoffset: 86.12;
        stroke-dasharray: 86.12;
        pointer-events: none;
        animation: validDash 400ms ease-in-out forwards;
      }
    }

    // if append or prepend exists
    &.AuiInputGroup {
      display: flex;

      .AuiFormControl {
        flex: 1 1 auto;
      }

      .AuiFormControl:not(:last-child) {
        input, textarea {
          border-top-right-radius: 0;
          border-bottom-right-radius: 0;
        }
      }

      .AuiFormControl:not(:first-child) {
        input, textarea {
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
        }
      }

      .AuiInputGroupAppend span, .AuiInputGroupPrepend span {
        height: 100%;
        display: flex;
        align-items: center;
        white-space: nowrap;
        color: rgba($dark-indigo, .6);
        
        background-color: $grey-3;
        padding: 11px 16px;
        border: $border solid $grey-2;
        border-radius: 6px;
        font-size: 14px;
      }

      .AuiInputGroupAppend {
        margin-left: -$border;

        span {
          border-top-left-radius: 0;
          border-bottom-left-radius: 0;
        }
      }

      .AuiInputGroupPrepend {
        margin-right: -$border;

        span {
          border-top-right-radius: 0;
          border-bottom-right-radius: 0;
        }
      }
    }
  }
  
  // helpertext
  .AuiHelperText {
    margin-top: 4px;
    color: $grey;
    font-size: 12px;
  }

  // error & valid base
  &.AuiFormGroup-error, &.AuiFormGroup-valid {
    .AuiInputWrapper .AuiFormControl {
      input, textarea {
        padding-right: calc(#{$validation-icon-size} + 2*#{$icon-input-margin});
        background: no-repeat;
        background-position: right $icon-input-margin center;
        background-size: $validation-icon-size;
      }
    }
  }
  
  // valid
  &.AuiFormGroup-valid .AuiInputWrapper .AuiFormControl {
    input, textarea {
      border: $border solid $success;
    }
  }

  // error
  &.AuiFormGroup-error {
    .AuiInputWrapper .AuiFormControl {
      input, textarea {
        background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23F64E60'%3E%3Ccircle cx='6' cy='6' r='4.5'/%3E%3Cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3E%3Ccircle cx='6' cy='8.2' r='.6' fill='%23F64E60' stroke='none'/%3E%3C/svg%3E");
        border: $border solid $danger;
      }
    }
    .helperText {
      color: $danger;
    }
  }

  // loading
  &.AuiFormGroup-loading .AuiInputWrapper .AuiFormControl {
    input, textarea {
      padding-right: calc(#{$loading-icon-size} + 2*#{$icon-input-margin});
    }
  }

  // password
  &.AuiFormGroup-password .AuiInputWrapper .AuiFormControl {
    input {
      padding-right: calc(#{$button-eye-size} + 2*#{$icon-input-margin});
    }
  }

  // when loading and (either error or valid) both appeared
  &.AuiFormGroup-loading.AuiFormGroup-valid .AuiInputWrapper .AuiFormControl, &.AuiFormGroup-loading.AuiFormGroup-error .AuiInputWrapper .AuiFormControl {
    input, textarea {
      padding-right: calc(#{$validation-icon-size} + #{$loading-icon-size} + 3*#{$icon-input-margin});
    }
    .AuiLoadingInput {
      right: calc(#{$border} + #{$validation-icon-size} + 2*#{$icon-input-margin});
    }
  }

  // when type password and either error or valid appeared
  &.AuiFormGroup-password.AuiFormGroup-valid .AuiInputWrapper .AuiFormControl, &.AuiFormGroup-password.AuiFormGroup-error .AuiInputWrapper .AuiFormControl {
    input {
      padding-right: calc(#{$validation-icon-size} + #{$button-eye-size} + 3*#{$icon-input-margin});
    }
    .AuiButtonEye {
      right: calc(#{$border} + #{$validation-icon-size} + 2*#{$icon-input-margin});
    }
  }

  // when type password and loading appeared
  &.AuiFormGroup-password.AuiFormGroup-loading .AuiInputWrapper .AuiFormControl {
    input {
      padding-right: calc(#{$loading-icon-size} + #{$button-eye-size} + 3*#{$icon-input-margin});
    }
    .AuiButtonEye {
      right: calc(#{$border} + #{$loading-icon-size} + 2*#{$icon-input-margin});
    }
  }

  // when type password and (either error or valid) and loading appeared
  &.AuiFormGroup-password.AuiFormGroup-valid.AuiFormGroup-loading .AuiInputWrapper .AuiFormControl, &.AuiFormGroup-password.AuiFormGroup-error.AuiFormGroup-loading .AuiInputWrapper .AuiFormControl {
    input {
      padding-right: calc(#{$validation-icon-size} + #{$loading-icon-size} + 4*#{$icon-input-margin} + #{$button-eye-size});
    }
    .AuiLoadingInput {
      right: calc(#{$border} + #{$validation-icon-size} + 2*#{$icon-input-margin});
    }
    .AuiButtonEye {
      right: calc(#{$border} + #{$validation-icon-size} + 3*#{$icon-input-margin} + #{$loading-icon-size});
    }
  }
}

.AuiCheckbox-root, .AuiRadio-root {
  cursor: pointer;
  display: inline-flex;
  align-items: center;

  &:hover {
    .AuiCheckboxWrapper .AuiCheckbox, .AuiRadioWrapper .AuiRadio {
      border: solid 2px $dark-indigo;
    }
  }

  .AuiCheckboxWrapper, .AuiRadioWrapper {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    padding: 8px;

    input {
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      margin: 0;
      padding: 0;
      z-index: 1;
      position: absolute;
      opacity: 0;
      cursor: inherit;

      &:checked {
        // for checkbox
        + .AuiCheckbox {
          background-color: $white;
          svg {
            stroke-dashoffset: 70.12;
          }
        }

      // for radio
        + .AuiRadio {
          border: solid 2px transparent;
          background-color: $dark-indigo;
          &::after {
            transform: translate(-50%, -50%) scale(1);
          }
        }
      }
    }

    // checkbox and radio base
    .AuiCheckbox, .AuiRadio {
      height: 24px;
      width: 24px;
      border: solid 2px $grey-2;
      transition: border-color 300ms ease-in-out, background-color 300ms ease-in-out;
    }

    // for checkbox
    .AuiCheckbox {
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 6px;
      svg {
        height: 100%;
        width: 100%;
        transition: stroke-dashoffset 300ms ease-in-out;
        fill: none;
        color: $dark-indigo;
        stroke: currentColor;
        stroke-width: 2px;
        stroke-dashoffset: 86.12;
        stroke-dasharray: 86.12;
        pointer-events: none;
      }
    }

    // for radio
    .AuiRadio {
      border-radius: 100%;
      background-color: $white;
      position: relative;
      &::after {
        content: "";
        display: block;
        width: 10px;
        height: 10px;
        border-radius: inherit;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) scale(0);
        transform-origin: center center;
        background-color: $white;
        transition: transform 300ms ease-in-out;
      }
    }
  }
  
  .AuiCheckboxLabel, .AuiRadioLabel {
    font-size: 14px;
    color: $dark-indigo;
  }

  // Primary & Secondary base
  &.Aui-primary, &.Aui-secondary {
    .AuiCheckboxWrapper {
      input:checked + .AuiCheckbox {
        border: solid 2px transparent;
      }
    }
    .AuiCheckbox svg {
      color: $white;
    }
  }

  //Primary
  &.Aui-primary {
    &:hover .AuiCheckboxWrapper .AuiCheckbox, &:hover .AuiRadioWrapper .AuiRadio {
      border: solid 2px $primary;
    }
    .AuiCheckboxWrapper, .AuiRadioWrapper {
      input:checked {
        + .AuiCheckbox, + .AuiRadio {
          background-color: $primary;
        }
      }
    }
  }

  //Secondary
  &.Aui-secondary {
    &:hover .AuiCheckboxWrapper .AuiCheckbox, &:hover .AuiRadioWrapper .AuiRadio {
      border: solid 2px $secondary;
    }
    .AuiCheckboxWrapper, .AuiRadioWrapper {
      input:checked {
        + .AuiCheckbox, + .AuiRadio {
          background-color: $secondary;
        }
      }
    }
  }

  // Disabled
  &.disabled {
    cursor: auto;
    
    .AuiCheckboxLabel, .AuiRadioLabel {
      color: $soft-grey;
    }

    .AuiCheckboxWrapper, .AuiRadioWrapper {
      .AuiCheckbox, .AuiRadio {
        border: solid 2px $grey-2 !important;
        background-color: $grey-3 !important;

        svg {
          color: $soft-grey !important;
        }
      }
    }
  }
}
